---
name: release python

on:
  push:
    branches: [master]
    tags:
      - '**'
  pull_request:
    branches: [master]

  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/linux-nvme/debian.python:latest
    steps:
      - uses: actions/checkout@v4

      - name: Allow workspace
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          path: dist/*.tar.gz
          retention-days: 5

  upload_test_pypi:
    needs: [build_sdist]
    runs-on: ubuntu-latest
    steps:
      - name: Install Python (if missing)
        run: apt-get update && apt-get install -y python3 python3-pip

      - name: Update python dependencies
        run: python3 -m pip install -U packaging --break-system-packages

      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  upload_pypi:
    needs: [build_sdist]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && github.repository == 'linux-nvme/libnvme'
    steps:
      - name: Install Python (if missing)
        run: apt-get update && apt-get install -y python3 python3-pip

      - name: Update python dependencies
        run: python3 -m pip install -U packaging --break-system-packages

      - name: Check if it is a release tag
        id: check-tag
        run: |
           if [[ ${{ github.event.ref }} =~ ^refs/tags/v([0-9]+\.[0-9]+)(\.[0-9]+)?(-rc[0-9]+)?$ ]]; then
               echo ::set-output name=match::true
           fi
      - name: Download artifiact
        uses: actions/download-artifact@v4
        if: steps.check-tag.outputs.match == 'true'
        with:
          name: artifact
          path: dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.check-tag.outputs.match == 'true'
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verify-metadata: false
